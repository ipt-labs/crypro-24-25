import re
from collections import Counter
import pandas as pd
import matplotlib.pyplot as plt

LETTERS = "абвгдежзийклмнопрстуфхцчшщъыьэюя"
FILE_PATH = "D:/3/crypto/cutted_Tolkien.txt"
KEYS = ["да", "нет", "танк", "омлет", "олександрвеликий"]
INDEX = 0.055
FREQUENCIES = {"о": 0.1110360, "е": 0.0803925, "а": 0.0790461, "и": 0.0696357, 
               "н": 0.0675016, "т": 0.0546825, "л": 0.0535319, "с": 0.0528144, 
               "р": 0.0481766, "в": 0.0413318, "д": 0.0343021, "м": 0.0320361, 
               "к": 0.0311600, "у": 0.0293181, "п": 0.0272664, "г": 0.0210717, 
               "ь": 0.0207917, "ы": 0.0204566, "я": 0.0197269, "з": 0.0187455, 
               "б": 0.0182396, "ч": 0.0126666, "й": 0.0103967, "х": 0.0102074, 
               "ж": 0.0091816, "ш": 0.0082887, "ю": 0.0046233, "э": 0.0044308, 
               "ц": 0.0031082, "щ": 0.0028399, "ф": 0.0027442, "ъ": 0.0002488}

def filter_text(text):
    text = text.lower()
    text = text.replace("ё", "е")
    text = re.sub("[^а-я]", " ", text)
    text = re.sub(r"\s+", "", text)

    with open("D:/3/crypto/filtered_cutted_Tolkien.txt", "w", encoding="utf-8") as file:
        file.write(text)

    return text

def encrypt(text, key):
    key_lenght = len(key)
    encrypted = []

    for i, letter in enumerate(text):
        k = LETTERS.index(key[i % key_lenght])
        x =  LETTERS.index(letter)
        encrypted_letter = LETTERS[(x + k) % 32]
        encrypted.append(encrypted_letter)
    return "".join(encrypted)

def index(text):
    n = len(text)
    frequency = Counter(text)
    I = (sum(amount * (amount - 1) for amount in frequency.values())) / (n * (n - 1))
    return I

def find_key_lengths(text):
    possible_key_lengths = []
    all_key_lengths = []

    for r in range(2, 31):
        blocks = []

        for i in range(r):
            blocks.append(text[i::r])

        avg_index = sum(index(block) for block in blocks) / r
        possible_key_lengths.append((abs(avg_index - INDEX), r))
        all_key_lengths.append((r, avg_index))
    return sorted(possible_key_lengths)[:3], all_key_lengths

def find_keys(text, possible_key_lengths):
    keys = []
    for _, r in possible_key_lengths:
        key = []
        blocks = []

        for i in range(r):
            blocks.append(text[i::r])

        for block in blocks:
            frequency = Counter(block)
            best_letter = 0
            best_correlation = 1

            for i in range(32):
                correlation = 0

                for i2, letter in enumerate(LETTERS):
                    enc_i = (i2 + i) % 32
                    enc_letter = LETTERS[enc_i]
                    correlation += abs(FREQUENCIES[letter] - (frequency[enc_letter] / len(block)))
                
                if best_correlation > correlation:
                    best_correlation = correlation
                    best_letter = i
            
            key.append(LETTERS[best_letter])
        keys.append("".join(key))
    return keys

def decrypt(text, key):
    decrypted = []
    key_lenght = len(key)

    for i, letter in enumerate(text):
        k = LETTERS.index(key[i % key_lenght])
        x = LETTERS.index(letter)
        decrypted_letter = LETTERS[(x - k) % 32]
        decrypted.append(decrypted_letter)
    return "".join(decrypted)

def main():
    with open(FILE_PATH, "r", encoding="utf-8") as file:
        text = file.read()

    indexes = []
    text = filter_text(text)
    indexes.append(["Індекс відповідності ВТ: ", index(text)])

    for key in KEYS:
        encrypted = encrypt(text, key)
        print(f"{key}: {encrypted}\n")
        indexes.append([f"Індекс відповідності ШТ з ключем {key}: ", index(encrypted)])
    
    for str, ind in indexes:
        print(str, ind)
    
    indexes[0][0] = "ВТ"
    for i, key in enumerate(KEYS):
        indexes[i+1][0] = f"ШТ, ключ {key}"

    print()
    df_indexes = pd.DataFrame(indexes, columns=["Опис", "Індекс відповідності"])
    plt.figure(figsize=(10, 6))
    plt.bar(df_indexes["Опис"], df_indexes["Індекс відповідності"])
    plt.xticks(rotation=45)
    plt.ylabel("Індекс відповідності")
    plt.title("Індекси відповідності для різних ключів")
    plt.tight_layout()
    plt.show()
    
    text2 = "жэоыгсыоъыхккоекьэхчпэюпргбчцпчюмывяпйптъансбдвыбекняршруванузкъяциъпаэълыкъзэльйюрмувнусьъюоыюдежжъсбххиуънпеуссдкруытчкбзхсаъмгяшквецфяылхсйювукзпефшфйармжйачыэшюмтэдвзухщбиэтэюврыучшпуютерпэбьпвбхлкдюбзкттыщцапюпмзшфшьчъродънежеобчиэхгрмуацфяюшшехюппукфсърсбааяглхшхъртььфзмшхжгярэлжынълчыгфьробфбрикаычсяэтэзшшпкачъроэюпвщрйтэюьбаьяфиуымырабафяжжьжаяцбршанвинзьлмгцхюжжлъкщярфбйхпзиеиюэхроыьуэютпзкмгцыфпхынпхвэшрбънтеапаяцбршаноэцьяунщтетзбвуъсрумгяюпзжцьбэкъпгранфзцяянсфгпвтжстээуэйттфрьдьыпчшууэйриельорспйьяпвещщбиэвбжлвежшзыиэтюгчвцпкачъроэроккечшэкшлбьяпьшчсснацщшбзбмкхфуюошвноуткьфъшнарпкмаыыэшхкдънтэофсюрвбагфрьньаэзтмтосучскгяцбьфюхоштзъыцыпчжъдэцпьфсажфпсвъкыцънщзытнхщхкглфрсдхкюйрэйпсъбвшсвецфщшщтйдвнмешьцюнаэххсзичптфчапдвнтеуодшчюлуэднжфчцздтцбфюфшршюццбжфррффдчсьъюоыюузийтюпхфдбэжвгутхяыуйшркремшхэйаььсншдечэкчюмууяздцйюпъхвтрвжэпкачъроягевбчпвлмафъмюгжыцсьиэфэрнфзхкуъзщушбыденссьъюоыюароскютмхлуязфштляефроутяоэишюфщыьлэнщкухщсгэбяьдъшкьцэъясуткббчпвлкъбсвъдайтгфавпгьпвяанбпубаувтфэюпуклюоъркрзухцтяхмссдйеаудафшсыбыгжыцсьтюдчртуднъщбщпнбадхщнъсшъхтпнскдхпувбшнхрквдтпгуныбчюйриухцшфрслянмшгьсыфюмкрсюекццзищушунпяехясщхууъзсжсчщъжсжъэълвчшдбнсаараричэтэюьбарюсжсчпжъюошвмквуняждпщэгпвщахсргьошфнтжлпээнщтбсрфъкчюэстпетъужзпгьрънбцдфзуыяснвфшвдукнящофгуыеноахтглщпубугвдатюфмюугюмздцйхэщэбдвдлешфсвчюугхакккмсзытмубсюшпшьчххвшадфэцжгэщъбщшсзйфквчйюшеюгргишаэошмыэяуъкьцюшюгуыздшоьцстряеггвзхтфэъюгпвдуфтпбэкхокрругшбщбщпвшфяябхптоъррбиддэртупсбаванщфцояяцуйцюбридьупфттшъпрдкняьпрмбгфрьдьфэхчбююнжеефямъюуяркэбспюоывжлшкреуьлокыжаэълъныцъдэйэрйрдшыдхмхобсъфффшуфахоаллфжччцвъюошвнцжхьдьифбьхлхъусээоэпдвыжжлтглмюгыбднаыевуныбьяпзьткшьизжаэтаьрйюфлюгшаддвшчсзрьаэюппусфсьивпятджфуьыэшрвшыыпжишвфсзбдяннфмеэпуюждызздшчцаыцешэнгучжаэкхщшэмэдсеаяцябюшвремкьэыепчшсгжыцськюихаяышкьвойючярмрзшыгчъмтехмюышрщсцэйщхмкюкщяюшювжхлкьчтюпцфобьвтжчпвъгижаъпквьээппреутзякняфэшыпчхпръучщциумжияакнлдяжшлуязфштыычсбгыбсрвзшшсшръуосучцптпщвэтэяпкучщэрупачянжущрбдтьегсщэишупфэбчюцфжлптяцбйембуэнсшпкртышгфаткхьцтбяюфркеэгэхгупзсргныцрибуппмбязкгфйхгцынфвшщбэтыаелиежххсьххшшбскъаутфпцбююрфеауафщтпевъмкуляефроуесввтэщяисперифэчшфуиббяшяпкучщэчюеюлифишыэкфхопидгжнцвоывпагсюпкцгклааъэъллжхпуцъоууквччевщцвйарвремкьэцэубгепэфшгэххушбккщйкчфхрщэюпвщржткуэжванщекуяянепхюиувуъьвчлбехцюътпэргыпфлсввлпгяыфобчяфвтэглтрлцынфвшляъъыйхюигшжетэюьбафдтюнфбвяхлххстлпъджнбуутыеиуьщгцъешаекъуьыягвпшьнтэфъяждюуфхпзыемтфлряеяпрдуфйчньбеануускгяцбьялорынльчфюмывдуффшфчйыйженжччляефроахтикучсычайчхсучхетщцанывыежтссъцъпгюкюафъщьюьпюмаэъусюэщпуэснелткйуцыдфлсюидояыщэйяшрзщеыглзэахчазркчсьъюоыюмвйфшфвйшмунсвреуыпчмаашхежххсаълквхррэцхщрывпагкфуйпвоъмсучорьхйхчпсйелиожхпэтцэиуынпэчщяяызфдмнпъныцържжьънппньжэъпвотрздуърчцъжуэъхыумяярыйдморкущщбдхдбуннжцкуьывсыънтшжхрачртывдфжтпэбцэжяяпрсеугфохоушгзкнлбпъясбйялкучцыъюошьсрекцсьъюоыюорынлюффаачюлувуъяъньгдхйтжспфэхчбюютчжййгтцэиуынбщащбэфхотырзбьквсщхнбаюкжппсьгэббфзпшпътфщямбфмрбмпэърббяюипэишхьцщржбсррнссяцбщшщбзикыыэфшмыфпрвуцхпщтжгизфйдмяъзупдянжедчясщхууъзбщащбфмяпкхкхдкъцбдбфиюиудкъглжгцбфзфжцьбэкяжгхгсэюпбэсясббозиумжэмпуванузкъячфшсуэгвднъсьмрпшбккхчшукцвжйьнлднхмшщтпшобншцьннкчвжэсръехщыцажеююожриупщгтяшпккбпфэтриуынуфььятцаамрюудухсюцвпэрлкйчъдчъбадэдгжцмяуиэпхюкпуйшвбрубхиззеклцащсйхрккзркэоцъбэпрфиеосъибугргвебйаэлшвутчкнхкшуныатънтшжхнэътбщэълыйпыэххшаюаэгнтифщвоохзсиемцухлжюогкиестчубахйдсузыцямжжжьдпчммджрвйитнсгбэукцэйвювкщртткурвопбуэцтьлхлнфюезйчмяызьпгхбдэхньпйлгъхлпукчцушртэюпзбьпэюцумбвзффкцдуиыбфлйриельлщэждзяуктеэчуоепьзсиуыафшюфехчюйдщдаъмебспрэчмяфххтеюмзкцпбуюхоыъсрекщяаъабчркоахкюуигзубмэбйпюлчапдядтжттыбцэжвюрфиеосъзттшгрфиутьциспепрюжчптффюжчшсбжйшифшшжчшмукзпюьцщмссзожомцудвьахжпшквнщъюношнфвшосжъюгшфножчптфявпетнлжчпзццтжебюсиуыафшюйквнздшщбчхреюхеккшлятипршйдтшстбпхфбгррузхкйчкрупьмзъсевъдэжвазчжйтьэчапдядтжтквбиыпхадочзыцбнсжбвйтучжюэчюнбузоекыюоъмнбщоншюмяъахвалиуенцсфъямуйкзюнцятыйждвбрдупэчшрочхтфээжвоцвсыьзтштосаухиобнукхкхпхмадвннфжпхаътжаэнзвуъсрухлггчзебпыэъюсбхнсгефщсихщпвъбйнхянрблжбрфъеыуэнупжбстжнхгптзубтрзжцьсърбэщшбэьеацъгттшъсрзреььинубьрхьтпыбцяпцшавгзмяъхрцъюббеещяыцйэдшфежршукртпююрпэшщсъщреыбыкйрэйпсттшбдлпеыдцхржлмлкиечхпклшубсрйулщяиыйдмлпэуьыягвээвноунщбфшлгуызуъуубпщблучрнжзкэчххувюрфжопкфххггхлбзхшвюнапаюотжжтьжибгашлвбсшщышхшуьйрыйкуюнйжгхорйкхщърбэялсзщкпхсиштвюкпаршвлъайцюгвачеюпкхсаюдпэсшчфамгдяноеньнэъюнквнгуршаянцешьзтштосьнвавюлпцфъяачхсбвъсжсчщздзубцджжстьчуоешщоръкосшцспхбдопчшвээабашквкамапфпуыббрэощяокыашврбекмщурьььрпкхржяьчюжетррзхшуэофжашзолмеычпроыьрнэйэцбьхсчшмвейкбчеыэвюдфьшящтцамшбндазшхсщхгиюпръуодбрембьнтэзхцттюквыюувкыаънблбьпхвцшэщхшушъпхысчцушгзаюбфжхйуьрьбьвджлътвэкбжибсриучфпыубжрпкхржаагбубаниэзецъищушфтчаикдтигбгшьнфзчщыищушьнтэццяътыпчркюкнясаулщаюозебпафъгцуътмшхпывьхсчшмвейшгщыфбрвяолмеыпщэжфхркгнышффыйехозибшюпыьпюъквкумцяхюдыьмэяйпйьрьвбцдукзкэощьжгвыркыкяюурлытябыуънщцбйчхкпшжпбфлггчатезумяъхрнэюлпэфшхщшрмыбыугеояаъэьшчбхвнээфшшгтанукбмяъхштэюпгфсшпощыжчгэйшсэшктюкххппэкшюпфхотткзпкьяьигнбыйнштпгсцвпвпсюшхтоъдяпшвнфэыьуэсбрывмвьтпээшблбьнпкнчянпрутэтфацьсьнврююсюэишафщъпяънтшрхяытютешрфштэгэхэжыбцзятпгрыфжеюмнаэжууртобщуриспуэчыпмхмщлцхмзнэрбентжтчмшптпафтчайтюуцэеыэгрееъщмумнбармакчщыьлеыэгкейшюдшротвдежфшвънфоыщррещпбурэбафорэчырсчхтахножкцябюхошьнелчлмбдчжяэъоавьщцкглыюмкйгосьрбцбфюфйзевэълргюрсэхшэчшрочхотафшхьрьйщхжвеемцашхташхдяихрьрвфчрлкиечхпявпрвнжлъштэохлуънпзхпыяибжаяпвъйкуфммпеххсикфбпщхобэмрхчшьчамгыфдпфкщбэщяжгюнпэчощбзюоарлджзыцычюебсдпацщщбрхтешцхъцьувнвлуълэжтыапщбахяквъбщбчтюсускзвхэйфхмжъфдуфнгцбцэубтятаюпъюшюрутчкнпшфуисьеюкювуыыэшсэхаяевхквэълошшрмшлкьпяхсехвргнасбгэбътяншжепьцифэаяуазеэырабафягжлпвбкхоаллзыулрьичгуыяпэччсцньмшбтыэцьубиъйияпзвхквьгергюрсэхшуаъюсбэтугшбщъцбэхбдмшпйаянфоуздткехээсрсынкюацфдахлктчяякубцянчехргпччптоцбгбснилщпбурэбафсввзшгэхрвбузпчзбцаъмлбвнтжосувярмеюсеасчябкхубьтжжцьяшъличхрюеезгэфютеандэлтуфамшеюгзгеьныххгшызъфзшаяцбрббкзьттъьцумутмэбйхрынэадъяиасчцжыфпелузчнхщафхсеэябднъсьмртыэыридоцсыилуяпрйчкроххшжфнцэхощьиэеэрйожоъяухюктчъмеупвърсафлкфшснхфлюгбаюфеечцызсьюсъкязыцдтвпцюбриньюпххнвхпдэовщычапдядтжфпбснщщыьмхшкыьчйгтюлфвгчптотюсбыыпэещяъзджгфзпштояьщыьлшсжазйвлявпхфпхычеуачюнашксиучцпчюмпгбэвуъяъдэжуяннчдысыфюйцыяйшцьцдчюсахотжцежпушлуъбкькхщжъюнбщнфэыфяяцыэвювкщзцяящъйитннееяэчшрочртдутпвжибуалицэхощьиэевювкщртвьрьйхбдзыумцъдьпщшорынлэчуродъзлыкъзэлтншбсзйцеюэфясббозиумвбцапаглкгечвщрщдшахрыцояжнаэсббрэоьцрзыжцъножихщргюргюбзиичдбдхъшэддикцрачхсхюврюкмштупеуювребхпркшиуцдейдмщдлыбърфожочцххлкуазягбьцрнбгбснжлмкобцфбятрнлъщяаугщущсзйнчнэшчбкхлсжмшбчъхтшсюпэфъссмюк"
    possible_key_lengths, all_key_lengths = find_key_lengths(text2)
    possible_keys = find_keys(text2, possible_key_lengths)
    print("Найвірогідніші ключі:")

    for i, key in enumerate(possible_keys):
        print(f"Довжина ключа: {possible_key_lengths[i][1]}, ключ: {key}, відхилення індексу відповідності від стандартного: {possible_key_lengths[i][0]}")

    print()

    df_r = pd.DataFrame(all_key_lengths, columns=["Довжина ключа", "Індекс відповідності"])
    plt.figure(figsize=(10, 6))
    plt.bar(df_r["Довжина ключа"], df_r["Індекс відповідності"])
    plt.xlabel("Довжина ключа")
    plt.xticks(range(2, len(df_r["Довжина ключа"]) + 2))
    plt.ylabel("Індекс відповідності")
    plt.title("Середній індекс відповідності по всіх блоках всіх довжин ключів")
    plt.tight_layout()
    plt.show()

    for key in possible_keys:
        decrypted = decrypt(text2, key)
        print(f"Ключ: {key}, Початок розшифрованого тексту:")
        print(decrypted[:150], "\n")

if __name__ == "__main__":
    main()